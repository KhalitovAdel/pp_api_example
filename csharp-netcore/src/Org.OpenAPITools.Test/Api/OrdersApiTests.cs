/*
 * Integration
 *
 *          Here can be some description if that needed     
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing OrdersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class OrdersApiTests : IDisposable
    {
        private OrdersApi instance;

        public OrdersApiTests()
        {
            instance = new OrdersApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OrdersApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' OrdersApi
            //Assert.IsType<OrdersApi>(instance);
        }

        /// <summary>
        /// Test ListOrders
        /// </summary>
        [Fact]
        public void ListOrdersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string deliveryCity = null;
            //decimal? deliveryLineCountFrom = null;
            //decimal? deliveryLineCountTo = null;
            //string deliveryName = null;
            //string documentNumber = null;
            //decimal? dvolumeFrom = null;
            //decimal? dvolumeTo = null;
            //string endDate = null;
            //bool? excludeAttached = null;
            //bool? isCloseFilter = null;
            //bool? isOpenFilter = null;
            //string startDate = null;
            //var response = instance.ListOrders(deliveryCity, deliveryLineCountFrom, deliveryLineCountTo, deliveryName, documentNumber, dvolumeFrom, dvolumeTo, endDate, excludeAttached, isCloseFilter, isOpenFilter, startDate);
            //Assert.IsType<List<OrderDto>>(response);
        }

        /// <summary>
        /// Test ReadOrder
        /// </summary>
        [Fact]
        public void ReadOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderNumber = null;
            //var response = instance.ReadOrder(orderNumber);
            //Assert.IsType<OrderDto>(response);
        }
    }
}
