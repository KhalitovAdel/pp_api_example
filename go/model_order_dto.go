/*
Integration

         Here can be some description if that needed     

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// OrderDto struct for OrderDto
type OrderDto struct {
	// Ordernummer
	Id string `json:"id"`
	// Orderstatus
	OrderStatus string `json:"orderStatus"`
	// Kund
	CustomerId string `json:"customerId"`
	DeliveryAddress OrderDtoDeliveryAddress `json:"deliveryAddress"`
	// Synkronisering status
	LastSyncStatus string `json:"lastSyncStatus"`
	// Levererad volym
	DeliveredVolume float32 `json:"deliveredVolume"`
	// Skapades
	CreatedAt time.Time `json:"createdAt"`
	// Senast ändrad
	UpdatedAt time.Time `json:"updatedAt"`
	// Synkronisera
	LastSyncAt NullableTime `json:"lastSyncAt"`
	// Dokumentnummer
	DocumentNumber NullableString `json:"documentNumber,omitempty"`
	// Projektnummer
	ProjectNumber NullableString `json:"projectNumber,omitempty"`
	// Ansvarig säljare
	SalesResponsible NullableString `json:"salesResponsible,omitempty"`
	// Orderdatum
	OrderDate NullableString `json:"orderDate,omitempty"`
	// Leveransdatum
	DeliveryDate NullableString `json:"deliveryDate,omitempty"`
	// Planerat Startdatum
	PlannedStartDate NullableString `json:"plannedStartDate,omitempty"`
	DeletedAt NullableTime `json:"deletedAt,omitempty"`
	UpdatedBy NullableString `json:"updatedBy,omitempty"`
	// Mottagarnamn
	DeliveryName NullableString `json:"deliveryName,omitempty"`
	// Leveranser
	DeliveryLineCount NullableFloat32 `json:"deliveryLineCount,omitempty"`
}

// NewOrderDto instantiates a new OrderDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderDto(id string, orderStatus string, customerId string, deliveryAddress OrderDtoDeliveryAddress, lastSyncStatus string, deliveredVolume float32, createdAt time.Time, updatedAt time.Time, lastSyncAt NullableTime) *OrderDto {
	this := OrderDto{}
	this.Id = id
	this.OrderStatus = orderStatus
	this.CustomerId = customerId
	this.DeliveryAddress = deliveryAddress
	this.LastSyncStatus = lastSyncStatus
	this.DeliveredVolume = deliveredVolume
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.LastSyncAt = lastSyncAt
	return &this
}

// NewOrderDtoWithDefaults instantiates a new OrderDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderDtoWithDefaults() *OrderDto {
	this := OrderDto{}
	return &this
}

// GetId returns the Id field value
func (o *OrderDto) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OrderDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OrderDto) SetId(v string) {
	o.Id = v
}

// GetOrderStatus returns the OrderStatus field value
func (o *OrderDto) GetOrderStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderStatus
}

// GetOrderStatusOk returns a tuple with the OrderStatus field value
// and a boolean to check if the value has been set.
func (o *OrderDto) GetOrderStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderStatus, true
}

// SetOrderStatus sets field value
func (o *OrderDto) SetOrderStatus(v string) {
	o.OrderStatus = v
}

// GetCustomerId returns the CustomerId field value
func (o *OrderDto) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *OrderDto) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *OrderDto) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetDeliveryAddress returns the DeliveryAddress field value
func (o *OrderDto) GetDeliveryAddress() OrderDtoDeliveryAddress {
	if o == nil {
		var ret OrderDtoDeliveryAddress
		return ret
	}

	return o.DeliveryAddress
}

// GetDeliveryAddressOk returns a tuple with the DeliveryAddress field value
// and a boolean to check if the value has been set.
func (o *OrderDto) GetDeliveryAddressOk() (*OrderDtoDeliveryAddress, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeliveryAddress, true
}

// SetDeliveryAddress sets field value
func (o *OrderDto) SetDeliveryAddress(v OrderDtoDeliveryAddress) {
	o.DeliveryAddress = v
}

// GetLastSyncStatus returns the LastSyncStatus field value
func (o *OrderDto) GetLastSyncStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastSyncStatus
}

// GetLastSyncStatusOk returns a tuple with the LastSyncStatus field value
// and a boolean to check if the value has been set.
func (o *OrderDto) GetLastSyncStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastSyncStatus, true
}

// SetLastSyncStatus sets field value
func (o *OrderDto) SetLastSyncStatus(v string) {
	o.LastSyncStatus = v
}

// GetDeliveredVolume returns the DeliveredVolume field value
func (o *OrderDto) GetDeliveredVolume() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DeliveredVolume
}

// GetDeliveredVolumeOk returns a tuple with the DeliveredVolume field value
// and a boolean to check if the value has been set.
func (o *OrderDto) GetDeliveredVolumeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeliveredVolume, true
}

// SetDeliveredVolume sets field value
func (o *OrderDto) SetDeliveredVolume(v float32) {
	o.DeliveredVolume = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *OrderDto) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *OrderDto) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *OrderDto) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *OrderDto) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *OrderDto) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *OrderDto) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetLastSyncAt returns the LastSyncAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *OrderDto) GetLastSyncAt() time.Time {
	if o == nil || o.LastSyncAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.LastSyncAt.Get()
}

// GetLastSyncAtOk returns a tuple with the LastSyncAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderDto) GetLastSyncAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastSyncAt.Get(), o.LastSyncAt.IsSet()
}

// SetLastSyncAt sets field value
func (o *OrderDto) SetLastSyncAt(v time.Time) {
	o.LastSyncAt.Set(&v)
}

// GetDocumentNumber returns the DocumentNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderDto) GetDocumentNumber() string {
	if o == nil || o.DocumentNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.DocumentNumber.Get()
}

// GetDocumentNumberOk returns a tuple with the DocumentNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderDto) GetDocumentNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DocumentNumber.Get(), o.DocumentNumber.IsSet()
}

// HasDocumentNumber returns a boolean if a field has been set.
func (o *OrderDto) HasDocumentNumber() bool {
	if o != nil && o.DocumentNumber.IsSet() {
		return true
	}

	return false
}

// SetDocumentNumber gets a reference to the given NullableString and assigns it to the DocumentNumber field.
func (o *OrderDto) SetDocumentNumber(v string) {
	o.DocumentNumber.Set(&v)
}
// SetDocumentNumberNil sets the value for DocumentNumber to be an explicit nil
func (o *OrderDto) SetDocumentNumberNil() {
	o.DocumentNumber.Set(nil)
}

// UnsetDocumentNumber ensures that no value is present for DocumentNumber, not even an explicit nil
func (o *OrderDto) UnsetDocumentNumber() {
	o.DocumentNumber.Unset()
}

// GetProjectNumber returns the ProjectNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderDto) GetProjectNumber() string {
	if o == nil || o.ProjectNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProjectNumber.Get()
}

// GetProjectNumberOk returns a tuple with the ProjectNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderDto) GetProjectNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectNumber.Get(), o.ProjectNumber.IsSet()
}

// HasProjectNumber returns a boolean if a field has been set.
func (o *OrderDto) HasProjectNumber() bool {
	if o != nil && o.ProjectNumber.IsSet() {
		return true
	}

	return false
}

// SetProjectNumber gets a reference to the given NullableString and assigns it to the ProjectNumber field.
func (o *OrderDto) SetProjectNumber(v string) {
	o.ProjectNumber.Set(&v)
}
// SetProjectNumberNil sets the value for ProjectNumber to be an explicit nil
func (o *OrderDto) SetProjectNumberNil() {
	o.ProjectNumber.Set(nil)
}

// UnsetProjectNumber ensures that no value is present for ProjectNumber, not even an explicit nil
func (o *OrderDto) UnsetProjectNumber() {
	o.ProjectNumber.Unset()
}

// GetSalesResponsible returns the SalesResponsible field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderDto) GetSalesResponsible() string {
	if o == nil || o.SalesResponsible.Get() == nil {
		var ret string
		return ret
	}
	return *o.SalesResponsible.Get()
}

// GetSalesResponsibleOk returns a tuple with the SalesResponsible field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderDto) GetSalesResponsibleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SalesResponsible.Get(), o.SalesResponsible.IsSet()
}

// HasSalesResponsible returns a boolean if a field has been set.
func (o *OrderDto) HasSalesResponsible() bool {
	if o != nil && o.SalesResponsible.IsSet() {
		return true
	}

	return false
}

// SetSalesResponsible gets a reference to the given NullableString and assigns it to the SalesResponsible field.
func (o *OrderDto) SetSalesResponsible(v string) {
	o.SalesResponsible.Set(&v)
}
// SetSalesResponsibleNil sets the value for SalesResponsible to be an explicit nil
func (o *OrderDto) SetSalesResponsibleNil() {
	o.SalesResponsible.Set(nil)
}

// UnsetSalesResponsible ensures that no value is present for SalesResponsible, not even an explicit nil
func (o *OrderDto) UnsetSalesResponsible() {
	o.SalesResponsible.Unset()
}

// GetOrderDate returns the OrderDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderDto) GetOrderDate() string {
	if o == nil || o.OrderDate.Get() == nil {
		var ret string
		return ret
	}
	return *o.OrderDate.Get()
}

// GetOrderDateOk returns a tuple with the OrderDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderDto) GetOrderDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderDate.Get(), o.OrderDate.IsSet()
}

// HasOrderDate returns a boolean if a field has been set.
func (o *OrderDto) HasOrderDate() bool {
	if o != nil && o.OrderDate.IsSet() {
		return true
	}

	return false
}

// SetOrderDate gets a reference to the given NullableString and assigns it to the OrderDate field.
func (o *OrderDto) SetOrderDate(v string) {
	o.OrderDate.Set(&v)
}
// SetOrderDateNil sets the value for OrderDate to be an explicit nil
func (o *OrderDto) SetOrderDateNil() {
	o.OrderDate.Set(nil)
}

// UnsetOrderDate ensures that no value is present for OrderDate, not even an explicit nil
func (o *OrderDto) UnsetOrderDate() {
	o.OrderDate.Unset()
}

// GetDeliveryDate returns the DeliveryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderDto) GetDeliveryDate() string {
	if o == nil || o.DeliveryDate.Get() == nil {
		var ret string
		return ret
	}
	return *o.DeliveryDate.Get()
}

// GetDeliveryDateOk returns a tuple with the DeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderDto) GetDeliveryDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveryDate.Get(), o.DeliveryDate.IsSet()
}

// HasDeliveryDate returns a boolean if a field has been set.
func (o *OrderDto) HasDeliveryDate() bool {
	if o != nil && o.DeliveryDate.IsSet() {
		return true
	}

	return false
}

// SetDeliveryDate gets a reference to the given NullableString and assigns it to the DeliveryDate field.
func (o *OrderDto) SetDeliveryDate(v string) {
	o.DeliveryDate.Set(&v)
}
// SetDeliveryDateNil sets the value for DeliveryDate to be an explicit nil
func (o *OrderDto) SetDeliveryDateNil() {
	o.DeliveryDate.Set(nil)
}

// UnsetDeliveryDate ensures that no value is present for DeliveryDate, not even an explicit nil
func (o *OrderDto) UnsetDeliveryDate() {
	o.DeliveryDate.Unset()
}

// GetPlannedStartDate returns the PlannedStartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderDto) GetPlannedStartDate() string {
	if o == nil || o.PlannedStartDate.Get() == nil {
		var ret string
		return ret
	}
	return *o.PlannedStartDate.Get()
}

// GetPlannedStartDateOk returns a tuple with the PlannedStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderDto) GetPlannedStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlannedStartDate.Get(), o.PlannedStartDate.IsSet()
}

// HasPlannedStartDate returns a boolean if a field has been set.
func (o *OrderDto) HasPlannedStartDate() bool {
	if o != nil && o.PlannedStartDate.IsSet() {
		return true
	}

	return false
}

// SetPlannedStartDate gets a reference to the given NullableString and assigns it to the PlannedStartDate field.
func (o *OrderDto) SetPlannedStartDate(v string) {
	o.PlannedStartDate.Set(&v)
}
// SetPlannedStartDateNil sets the value for PlannedStartDate to be an explicit nil
func (o *OrderDto) SetPlannedStartDateNil() {
	o.PlannedStartDate.Set(nil)
}

// UnsetPlannedStartDate ensures that no value is present for PlannedStartDate, not even an explicit nil
func (o *OrderDto) UnsetPlannedStartDate() {
	o.PlannedStartDate.Unset()
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderDto) GetDeletedAt() time.Time {
	if o == nil || o.DeletedAt.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt.Get()
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderDto) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletedAt.Get(), o.DeletedAt.IsSet()
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *OrderDto) HasDeletedAt() bool {
	if o != nil && o.DeletedAt.IsSet() {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given NullableTime and assigns it to the DeletedAt field.
func (o *OrderDto) SetDeletedAt(v time.Time) {
	o.DeletedAt.Set(&v)
}
// SetDeletedAtNil sets the value for DeletedAt to be an explicit nil
func (o *OrderDto) SetDeletedAtNil() {
	o.DeletedAt.Set(nil)
}

// UnsetDeletedAt ensures that no value is present for DeletedAt, not even an explicit nil
func (o *OrderDto) UnsetDeletedAt() {
	o.DeletedAt.Unset()
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderDto) GetUpdatedBy() string {
	if o == nil || o.UpdatedBy.Get() == nil {
		var ret string
		return ret
	}
	return *o.UpdatedBy.Get()
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderDto) GetUpdatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedBy.Get(), o.UpdatedBy.IsSet()
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *OrderDto) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy.IsSet() {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given NullableString and assigns it to the UpdatedBy field.
func (o *OrderDto) SetUpdatedBy(v string) {
	o.UpdatedBy.Set(&v)
}
// SetUpdatedByNil sets the value for UpdatedBy to be an explicit nil
func (o *OrderDto) SetUpdatedByNil() {
	o.UpdatedBy.Set(nil)
}

// UnsetUpdatedBy ensures that no value is present for UpdatedBy, not even an explicit nil
func (o *OrderDto) UnsetUpdatedBy() {
	o.UpdatedBy.Unset()
}

// GetDeliveryName returns the DeliveryName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderDto) GetDeliveryName() string {
	if o == nil || o.DeliveryName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DeliveryName.Get()
}

// GetDeliveryNameOk returns a tuple with the DeliveryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderDto) GetDeliveryNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveryName.Get(), o.DeliveryName.IsSet()
}

// HasDeliveryName returns a boolean if a field has been set.
func (o *OrderDto) HasDeliveryName() bool {
	if o != nil && o.DeliveryName.IsSet() {
		return true
	}

	return false
}

// SetDeliveryName gets a reference to the given NullableString and assigns it to the DeliveryName field.
func (o *OrderDto) SetDeliveryName(v string) {
	o.DeliveryName.Set(&v)
}
// SetDeliveryNameNil sets the value for DeliveryName to be an explicit nil
func (o *OrderDto) SetDeliveryNameNil() {
	o.DeliveryName.Set(nil)
}

// UnsetDeliveryName ensures that no value is present for DeliveryName, not even an explicit nil
func (o *OrderDto) UnsetDeliveryName() {
	o.DeliveryName.Unset()
}

// GetDeliveryLineCount returns the DeliveryLineCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderDto) GetDeliveryLineCount() float32 {
	if o == nil || o.DeliveryLineCount.Get() == nil {
		var ret float32
		return ret
	}
	return *o.DeliveryLineCount.Get()
}

// GetDeliveryLineCountOk returns a tuple with the DeliveryLineCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderDto) GetDeliveryLineCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveryLineCount.Get(), o.DeliveryLineCount.IsSet()
}

// HasDeliveryLineCount returns a boolean if a field has been set.
func (o *OrderDto) HasDeliveryLineCount() bool {
	if o != nil && o.DeliveryLineCount.IsSet() {
		return true
	}

	return false
}

// SetDeliveryLineCount gets a reference to the given NullableFloat32 and assigns it to the DeliveryLineCount field.
func (o *OrderDto) SetDeliveryLineCount(v float32) {
	o.DeliveryLineCount.Set(&v)
}
// SetDeliveryLineCountNil sets the value for DeliveryLineCount to be an explicit nil
func (o *OrderDto) SetDeliveryLineCountNil() {
	o.DeliveryLineCount.Set(nil)
}

// UnsetDeliveryLineCount ensures that no value is present for DeliveryLineCount, not even an explicit nil
func (o *OrderDto) UnsetDeliveryLineCount() {
	o.DeliveryLineCount.Unset()
}

func (o OrderDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["orderStatus"] = o.OrderStatus
	}
	if true {
		toSerialize["customerId"] = o.CustomerId
	}
	if true {
		toSerialize["deliveryAddress"] = o.DeliveryAddress
	}
	if true {
		toSerialize["lastSyncStatus"] = o.LastSyncStatus
	}
	if true {
		toSerialize["deliveredVolume"] = o.DeliveredVolume
	}
	if true {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if true {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if true {
		toSerialize["lastSyncAt"] = o.LastSyncAt.Get()
	}
	if o.DocumentNumber.IsSet() {
		toSerialize["documentNumber"] = o.DocumentNumber.Get()
	}
	if o.ProjectNumber.IsSet() {
		toSerialize["projectNumber"] = o.ProjectNumber.Get()
	}
	if o.SalesResponsible.IsSet() {
		toSerialize["salesResponsible"] = o.SalesResponsible.Get()
	}
	if o.OrderDate.IsSet() {
		toSerialize["orderDate"] = o.OrderDate.Get()
	}
	if o.DeliveryDate.IsSet() {
		toSerialize["deliveryDate"] = o.DeliveryDate.Get()
	}
	if o.PlannedStartDate.IsSet() {
		toSerialize["plannedStartDate"] = o.PlannedStartDate.Get()
	}
	if o.DeletedAt.IsSet() {
		toSerialize["deletedAt"] = o.DeletedAt.Get()
	}
	if o.UpdatedBy.IsSet() {
		toSerialize["updatedBy"] = o.UpdatedBy.Get()
	}
	if o.DeliveryName.IsSet() {
		toSerialize["deliveryName"] = o.DeliveryName.Get()
	}
	if o.DeliveryLineCount.IsSet() {
		toSerialize["deliveryLineCount"] = o.DeliveryLineCount.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableOrderDto struct {
	value *OrderDto
	isSet bool
}

func (v NullableOrderDto) Get() *OrderDto {
	return v.value
}

func (v *NullableOrderDto) Set(val *OrderDto) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderDto) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderDto(val *OrderDto) *NullableOrderDto {
	return &NullableOrderDto{value: val, isSet: true}
}

func (v NullableOrderDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


