/*
Integration

         Here can be some description if that needed     

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ValidationErrorDto struct for ValidationErrorDto
type ValidationErrorDto struct {
	Message string `json:"message"`
	// Returns a date as a string value in ISO format.
	Timestamp string `json:"timestamp"`
	StatusCode float32 `json:"statusCode"`
	Code string `json:"code"`
	Meta ErrorMetaDto `json:"meta"`
}

// NewValidationErrorDto instantiates a new ValidationErrorDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidationErrorDto(message string, timestamp string, statusCode float32, code string, meta ErrorMetaDto) *ValidationErrorDto {
	this := ValidationErrorDto{}
	this.Message = message
	this.Timestamp = timestamp
	this.StatusCode = statusCode
	this.Code = code
	this.Meta = meta
	return &this
}

// NewValidationErrorDtoWithDefaults instantiates a new ValidationErrorDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidationErrorDtoWithDefaults() *ValidationErrorDto {
	this := ValidationErrorDto{}
	return &this
}

// GetMessage returns the Message field value
func (o *ValidationErrorDto) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ValidationErrorDto) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *ValidationErrorDto) SetMessage(v string) {
	o.Message = v
}

// GetTimestamp returns the Timestamp field value
func (o *ValidationErrorDto) GetTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *ValidationErrorDto) GetTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *ValidationErrorDto) SetTimestamp(v string) {
	o.Timestamp = v
}

// GetStatusCode returns the StatusCode field value
func (o *ValidationErrorDto) GetStatusCode() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value
// and a boolean to check if the value has been set.
func (o *ValidationErrorDto) GetStatusCodeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusCode, true
}

// SetStatusCode sets field value
func (o *ValidationErrorDto) SetStatusCode(v float32) {
	o.StatusCode = v
}

// GetCode returns the Code field value
func (o *ValidationErrorDto) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *ValidationErrorDto) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *ValidationErrorDto) SetCode(v string) {
	o.Code = v
}

// GetMeta returns the Meta field value
func (o *ValidationErrorDto) GetMeta() ErrorMetaDto {
	if o == nil {
		var ret ErrorMetaDto
		return ret
	}

	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value
// and a boolean to check if the value has been set.
func (o *ValidationErrorDto) GetMetaOk() (*ErrorMetaDto, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Meta, true
}

// SetMeta sets field value
func (o *ValidationErrorDto) SetMeta(v ErrorMetaDto) {
	o.Meta = v
}

func (o ValidationErrorDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["message"] = o.Message
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	if true {
		toSerialize["statusCode"] = o.StatusCode
	}
	if true {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableValidationErrorDto struct {
	value *ValidationErrorDto
	isSet bool
}

func (v NullableValidationErrorDto) Get() *ValidationErrorDto {
	return v.value
}

func (v *NullableValidationErrorDto) Set(val *ValidationErrorDto) {
	v.value = val
	v.isSet = true
}

func (v NullableValidationErrorDto) IsSet() bool {
	return v.isSet
}

func (v *NullableValidationErrorDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidationErrorDto(val *ValidationErrorDto) *NullableValidationErrorDto {
	return &NullableValidationErrorDto{value: val, isSet: true}
}

func (v NullableValidationErrorDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidationErrorDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


